{"version":3,"file":"static/webpack/static/development/pages/_app.js.627f56bc03938109d3f7.hot-update.js","sources":["webpack:///./src/pages/ProductList/index.js"],"sourcesContent":["import Router from 'next/router'\n\nimport { getProducts } from '../../api/products/getProducts'\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport Loader from '../../components/Loader'\nimport Layout from '../../components/Layout'\nimport { Pagination } from '../../components/Pagination'\nimport Product from './components/Product'\nimport { ProductsWrap, ProductsWrapInner } from './styled'\n\nimport * as cartActions from '../../store/cart/actions'\nimport * as productActions from '../../store/products/actions'\nimport { PAGE_DEFAULT, PAGE_SIZE_DEFAULT } from '../../constants/base'\n\n\nconst Products = ({ res, match, page, size, addProduct, isLoading }) => {\n  const handleAddToCart = productId => addProduct(productId)\n  /*const handleSizeChange = newSize => {\n    Router.push(`/products?page=${page}&size=${newSize}`)\n  }*/\n\n  return (\n    <Layout>\n      {isLoading && <Loader centered />}\n      {res && (\n        <>\n          {/*<Pagination\n            pages={res.meta.page_count}\n            page={page}\n            pageSize={size}\n            recordCount={res.meta.record_count}\n            onSizeChange={handleSizeChange}\n          />*/}\n          <ProductsWrap>\n            <ProductsWrapInner data-testid={'products-in-list'}>\n              {res.data.map(product => (\n                <Product\n                  key={product.id}\n                  node={product}\n                  addProduct={handleAddToCart}\n                />\n              ))}\n            </ProductsWrapInner>\n          </ProductsWrap>\n        </>\n      )}\n    </Layout>\n  )\n}\n\nconst getInitialProps = async ({ store, query }) => {\n  const { page = PAGE_DEFAULT, size = PAGE_SIZE_DEFAULT } = query\n\n  const res = await getProducts({ page: { number: page, size} })\n  store.dispatch(productActions.loadProducts(res.data))\n  return { page, size, isLoading: false, res }\n}\n\nconst mapDispatchToProps = {\n  addProduct: cartActions.addProduct,\n}\n\nconst ProductList = connect(\n  null,\n  mapDispatchToProps\n)(Products)\n\nProductList.getInitialProps = getInitialProps\n\nexport { ProductList }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;AAIA;AAEA;AAAA;AAWA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAGA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AADA;AAIA;AAKA;;;;;A","sourceRoot":""}